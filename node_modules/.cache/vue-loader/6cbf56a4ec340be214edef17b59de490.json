{"remainingRequest":"C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\src\\components\\Articulo.vue?vue&type=template&id=0da5a0ea&","dependencies":[{"path":"C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\src\\components\\Articulo.vue","mtime":1635106361945},{"path":"C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\marin\\OneDrive\\Escritorio\\FrontEnd\\Compañeros\\desafio_implementación_de_Vue_Router\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}